#!/usr/bin/env python3
"""
–•—É–∫ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Å—Å–∏–π Claude Code
–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—á–∞–ª–µ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–π
"""

import json
import sys
import os
from datetime import datetime
from pathlib import Path

def log_session_event(input_data, event_type):
    """–õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏–µ —Å–µ—Å—Å–∏–∏ –≤ —Ñ–∞–π–ª"""
    
    project_dir = os.environ.get('CLAUDE_PROJECT_DIR', os.getcwd())
    logs_dir = Path(project_dir) / '.claude' / 'logs'
    logs_dir.mkdir(parents=True, exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç—ã
    log_file = logs_dir / f"sessions-{datetime.now().strftime('%Y-%m')}.log"
    
    # –ì–æ—Ç–æ–≤–∏–º –∑–∞–ø–∏—Å—å –ª–æ–≥–∞
    log_entry = {
        'timestamp': datetime.now().isoformat(),
        'event_type': event_type,
        'session_id': input_data.get('session_id', 'unknown'),
        'hook_event_name': input_data.get('hook_event_name'),
        'source': input_data.get('source', 'unknown'),
        'cwd': input_data.get('cwd', 'unknown')
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
    if event_type == 'session_start':
        log_entry['source'] = input_data.get('source', 'startup')
    elif event_type == 'session_stop':
        log_entry['stop_hook_active'] = input_data.get('stop_hook_active', False)
    elif event_type == 'user_prompt':
        prompt = input_data.get('prompt', '')
        log_entry['prompt_length'] = len(prompt)
        log_entry['prompt_preview'] = prompt[:100] + '...' if len(prompt) > 100 else prompt
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
    with open(log_file, 'a', encoding='utf-8') as f:
        f.write(json.dumps(log_entry, ensure_ascii=False) + '\n')
    
    return log_entry

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ö—É–∫–∞"""
    
    try:
        # –ß–∏—Ç–∞–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        input_data = json.load(sys.stdin)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
        hook_event_name = input_data.get('hook_event_name', '')
        
        if hook_event_name == 'SessionStart':
            log_entry = log_session_event(input_data, 'session_start')
            print(f"üöÄ –°–µ—Å—Å–∏—è –Ω–∞—á–∞—Ç–∞: {log_entry['session_id'][:8]}...")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ –ø—Ä–æ–µ–∫—Ç–µ –¥–ª—è SessionStart
            context_info = f"""
## –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ –Ω–∞ {datetime.now().strftime('%Y-%m-%d %H:%M')}

–°–µ—Å—Å–∏—è: {log_entry['session_id'][:8]}
–ò—Å—Ç–æ—á–Ω–∏–∫ –∑–∞–ø—É—Å–∫–∞: {log_entry['source']}
–†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞: {log_entry['cwd']}

–≠—Ç–æ —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –Ω–∞ React + TypeScript + Vite.
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–¥–∞—á, –∫–∞–ª–µ–Ω–¥–∞—Ä—å, —Å–æ–≤–µ—â–∞–Ω–∏—è.
            """
            
            # –î–ª—è SessionStart –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
            output = {
                "hookSpecificOutput": {
                    "hookEventName": "SessionStart",
                    "additionalContext": context_info.strip()
                }
            }
            print(json.dumps(output))
            
        elif hook_event_name == 'Stop':
            log_entry = log_session_event(input_data, 'session_stop')
            print(f"‚èπÔ∏è –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {log_entry['session_id'][:8]}...")
            
        elif hook_event_name == 'UserPromptSubmit':
            log_entry = log_session_event(input_data, 'user_prompt')
            print(f"üí¨ –ü—Ä–æ–º–ø—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω ({log_entry['prompt_length']} —Å–∏–º–≤–æ–ª–æ–≤)")
            
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON: {e}", file=sys.stderr)
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}", file=sys.stderr)
        sys.exit(1)

if __name__ == "__main__":
    main()